{"/pages/about/": {
    "title": "About",
    "keywords": "Jekyll",
    "url": "/pages/about/",
    "body": "This is an about page."
  },"/pages/contact/": {
    "title": "Contact",
    "keywords": "Jekyll",
    "url": "/pages/contact/",
    "body": "This is an contact page."
  },"/pages/design/draft/": {
    "title": "Design Draft",
    "keywords": "Jekyll",
    "url": "/pages/design/draft/",
    "body": "This is an draft page."
  },"/jekyll/2023-06-05-test.html": {
    "title": "업무자동화1 - 파이썬으로 PDF 텍스트 분석하기",
    "keywords": "Jekyll",
    "url": "/jekyll/2023-06-05-test.html",
    "body": "PDFMiner PDFMiner은 Python 프레임워크에서 PDF 문서를 처리하는 데 사용되는 라이브러리입니다. PDFMiner를 사용하면 PDF 문서에서 텍스트, 레이아웃 및 메타데이터를 추출할 수 있습니다. 이를 통해 PDF 문서를 효과적으로 분석하고 텍스트로 변환하여 다양한 작업에 활용할 수 있습니다. 필요한 경우 PDFMiner의 공식 문서를 확인하세요. PDFMiner를 사용하여 PDF를 텍스트로 변환하려면 다음 단계를 따르면 됩니다: PDFMiner 설치하기 먼저 pip 명령을 사용하여 PDFMiner 패키지를 설치해야 합니다. pip install pdfminer.six 명령을 실행하여 설치할 수 있습니다. PDFMiner로 PDF 문서 읽기 PDFMiner를 사용하여 PDF 문서를 읽기 위해서는 ‘pdfminer.high_level’ 모듈을 임포트해야 합니다. 아래 코드를 사용하여 PDF 문서를 읽고 텍스트로 변환할 수 있습니다. from pdfminer.high_level import extract_text pdf_path = 'path/to/pdf/document.pdf' (PDF 파일 경로 지정) text = extract_text(pdf_path) extract_text 함수는 PDF에서 텍스트를 추출하여 문자열로 반환합니다. 이제 추출된 텍스트를 원하는 방식으로 처리하고 분석할 수 있습니다. 단, 추출된 텍스트를 새로운 txt 파일에 저장하고자 한다면 다음 명령어를 사용합니다. file = open(\"sample.txt\", \"w\", encoding=\"utf16\") encoding=\"utf16\"은 파일을 작성할 때 사용할 인코딩을 지정하는 파라미터입니다. 여기서는 UTF-16 인코딩을 사용하도록 지정하였습니다. file.write(text) 위의 명령을 실행했을 때 반환되는 숫자는 파일에 성공적으로 쓰여진 문자의 개수를 나타냅니다. 이를 통해 파일에 실제로 몇 개의 문자가 쓰여졌는지 확인할 수 있습니다. file.close()"
  },"/jekyll/2022-06-30-tips_warnings_dangers.html": {
    "title": "Tips, Warnings, and Dangers",
    "keywords": "Jekyll",
    "url": "/jekyll/2022-06-30-tips_warnings_dangers.html",
    "body": "The jekyll-theme supports tips, warnings, and dangers blocks and the style is referred from the discord.js website. You could have the following markdown attributes (supported by kramdown): Tips Using a {: .block-tip} attribute: &gt; ##### TIP &gt; &gt; This guide is last tested with @napi-rs/canvas^0.1.20, so make sure you have &gt; this or a similar version after installation. {: .block-tip } TIP This guide is last tested with @napi-rs/canvas^0.1.20, so make sure you have this or a similar version after installation. Warnings Using a {: .block-warning} attribute: &gt; ##### WARNING &gt; &gt; Be sure that you're familiar with things like async/await and object destructuring &gt; before continuing, as we'll be making use of features like these. {: .block-warning } WARNING Be sure that you’re familiar with things like async/await and object destructuring before continuing, as we’ll be making use of features like these. Dangers Using a {: .block-danger} attribute: &gt; ##### DANGER &gt; &gt; You cannot delete an ephemeral message. {: .block-danger } DANGER You cannot delete an ephemeral message."
  },"/jekyll/2022-06-26-wide_tables.html": {
    "title": "Wide tables",
    "keywords": "Jekyll",
    "url": "/jekyll/2022-06-26-wide_tables.html",
    "body": "A wide tables needs to be wrapped into a div with class table-wrapper to make sure it displayed as expected on mobile devices. For example, &lt;div class=\"table-wrapper\" markdown=\"block\"&gt; |title1|title2|title3|title4|title5|title6|title7|title8| |:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:| |1|2|3|4|5|6|7|8| |1|2|3|4|5|6|7|8| |1|2|3|4|5|6|7|8| |1|2|3|4|5|6|7|8| &lt;/div&gt; Will be rendered as title1 title2 title3 title4 title5 title6 title7 title8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8 1 2 3 4 5 6 7 8"
  },"/jekyll/2022-05-24-page_cover.html": {
    "title": "Page with cover image",
    "keywords": "Jekyll",
    "url": "/jekyll/2022-05-24-page_cover.html",
    "body": "The jekyll-gitbook theme supports adding a cover image to a specific page by adding a cover field to the page metadata: --- title: Page with cover image author: Tao He date: 2022-05-24 category: Jekyll layout: post + cover: /assets/jekyll-gitbook/dinosaur.gif ---"
  },"/jekyll/2021-08-10-toc.html": {
    "title": "How to Generate TOC",
    "keywords": "Jekyll",
    "url": "/jekyll/2021-08-10-toc.html",
    "body": "The jekyll-gitbook theme leverages jekyll-toc to generate the Contents for the page. The TOC feature is not enabled by default. To use the TOC feature, modify the TOC configuration in _config.yml: toc: enabled: true Why this repo long contents ….. a b c d Why this repo long contents ….. 1 2 3 4 Why this repo long contents ….. e f g h Why this repo 5 6 7 8 Why this repo long contents ….. a b c d Why this repo long contents ….. 1 2 3 4 Why this repo long contents ….. e f g h Why this repo 5 6 7 8 Why this repo long contents ….. a b c d Why this repo long contents ….. 1 2 3 4 Why this repo long contents ….. e f g h Why this repo 5 6 7 8 Why this repo long contents ….. a b c d Why this repo long contents ….. 1 2 3 4 Why this repo long contents ….. e f g h Why this repo 5 6 7 8"
  },"/jekyll/2019-04-29-license.html": {
    "title": "License",
    "keywords": "Jekyll",
    "url": "/jekyll/2019-04-29-license.html",
    "body": "This work is open sourced under the Apache License, Version 2.0, using the same license as the original GitBook repository. Copyright 2019 Tao He."
  },"/jekyll/2019-04-28-howto.html": {
    "title": "How to Get Started",
    "keywords": "Jekyll",
    "url": "/jekyll/2019-04-28-howto.html",
    "body": "The jekyll-gitbook theme can be used just as other Jekyll themes and support remote theme on Github Pages, see the official guide as well. You can introduce this jekyll theme into your own site by either Fork this repository and add your markdown posts to the _posts folder, then push to your own Github repository. Use as a remote theme in your _config.yml(just like what we do for this site itself), # Configurations title: Jekyll Gitbook longtitle: Jekyll Gitbook remote_theme: sighingnow/jekyll-gitbook TIP No need to push generated HTML bundle."
  },"/jekyll/2019-04-27-why.html": {
    "title": "Why Jekyll with GitBook",
    "keywords": "Jekyll",
    "url": "/jekyll/2019-04-27-why.html",
    "body": "GitBook is an amazing frontend style to present and organize contents (such as book chapters and blogs) on Web. The typical to deploy GitBook at Github Pages is building HTML files locally and then push to Github repository, usually to the gh-pages branch. However, it’s quite annoying to repeat such workload and make it hard for people do version control via git for when there are generated HTML files to be staged in and out. This theme takes style definition out of generated GitBook site and provided the template for Jekyll to rendering markdown documents to HTML, thus the whole site can be deployed to Github Pages without generating and uploading HTML bundle every time when there are changes to the original repository."
  }}
